{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/error/error.gif","components/error/Error.js","components/spinner/Spinner.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","src","img","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RandomChar","props","state","loading","error","marvelService","onCharLoaded","setState","UpdateChar","Math","floor","random","then","catch","onError","this","spinner","errorMessage","content","onClick","mjolnir","alt","Component","View","CharList","charList","newItemLoading","charEnded","componentDidMount","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","console","log","renderItems","arr","item","imgStyle","objectFit","onCharSelected","disabled","Skeleton","CharInfo","updateChar","charId","prevProps","prevState","skeleton","comicsList","renderedComics","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a45c1f52.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"#\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"#\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    _apiKey = 'apikey=de1e80459c4b5b7833f6e989e1657354'\r\n    _baseOffset = 210;\r\n    getResource = async (url) => {\r\n        let res = await fetch(url)\r\n\r\n        if(!res.ok) {\r\n            throw new Error (`Could not fetch ${url} , status ${res.status}`)\r\n        }\r\n        return await res.json()\r\n    }\r\n\r\n    \r\n    getAllCharacters = async(offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async(id) => {\r\n        const res =  await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n    \r\n        \r\n        \r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description === '' ? 'Нету данных об этом персонаже' : char.description.slice(0,100)+ '...' ,\r\n            thumbnail:`${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage : char.urls[0].url,\r\n            wiki : char.urls[1].url,\r\n            comics : char.comics.items.slice(0,3)\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <img src={img}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Error;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import './randomChar.scss';\r\nimport MarvelService from '../../services/MarvelService'\r\nimport Error from '../error/Error';\r\nimport Spinner from '../spinner/Spinner';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport { Component } from 'react';\r\n\r\nclass RandomChar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false,\r\n    }\r\n\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({ char, loading: false })\r\n    }\r\n\r\n    UpdateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\r\n        this.setState({ loading: true })\r\n        this.marvelService\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.UpdateChar()\r\n        // this.timer = setInterval(this.UpdateChar , 3000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // clearInterval(this.timer);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { char, loading, error } = this.state;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const errorMessage = error ? <Error /> : null;\r\n        const content = !(loading || error) ? <View char={char} /> : null\r\n\r\n\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br />\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\" onClick={this.UpdateChar}>\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\r\nimport { Component } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Error from '../error/Error';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemLoading: false,\r\n        offset: 500 ,\r\n        charEnded : false\r\n    }\r\n\r\n    marvelService = new MarvelService()\r\n\r\n    componentDidMount = () => {\r\n        this.onRequest()\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading()\r\n        this.marvelService.getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false ;\r\n        if(newCharList.length < 9){\r\n           ended = true \r\n        }\r\n        console.log(typeof newCharList)\r\n        this.setState(({ offset, charList }) => ({\r\n            charList: [ ...charList , ...newCharList],\r\n            loading: false,\r\n            newItemLoading: false,\r\n            offset: offset + 9,\r\n            charEnded :ended\r\n        }))\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n\r\n    renderItems = (arr) => {\r\n        const items = arr.map((item) => {\r\n            let imgStyle = { objectFit: 'cover' };\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = { objectFit: 'unset' };\r\n            }\r\n\r\n            return (\r\n                <li className=\"char__item\"\r\n                    onClick={() => this.props.onCharSelected(item.id)}\r\n                    key={item.id}>\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"char__grid\" >\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const { charList, loading, error, offset, newItemLoading ,charEnded } = this.state;\r\n\r\n        const items = this.renderItems(charList)\r\n        const errorMessage = error ? <Error /> : null\r\n        const spinner = loading ? <Spinner /> : null\r\n        const content = !(loading || error) ? items : null\r\n\r\n        return (\r\n            <div className=\"char__list\" >\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button onClick={() => this.onRequest(offset)}\r\n                    disabled={newItemLoading}\r\n                    style={{'display' : charEnded ? 'none' : 'block'}}\r\n                    className=\"button button__main button__long\">\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import './charInfo.scss';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Error from '../error/Error';\r\nimport Spinner from '../spinner/Spinner';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport { Component } from 'react';\r\n\r\nclass CharInfo extends Component {\r\n\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService()\r\n\r\n    componentDidMount() {\r\n        this.updateChar()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    updateChar = () => {\r\n        const { charId } = this.props\r\n        if (!charId) {\r\n            return\r\n        }\r\n        \r\n        this.setState({\r\n            loading: true\r\n        })\r\n        this.marvelService.getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n\r\n            //  this.foo.bar = 0;\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { char, loading, error } = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton />;\r\n        const errorMessage = error ? <Error /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n        console.log(skeleton)\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst View = ({ char }) => {\r\n\r\n    const { name, description, thumbnail, homepage, wiki, comics } = char\r\n    let imgStyle = { objectFit: 'cover' };\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { objectFit: 'unset' };\r\n    }\r\n    const comicsList = comics.map((item, id) => {\r\n\r\n\r\n\r\n        return (\r\n\r\n            <li key={id} className=\"char__comics-item\" style={imgStyle}>\r\n                {item.name}\r\n            </li>\r\n        )\r\n    })\r\n\r\n\r\n\r\n\r\n    const renderedComics = comics.length ? comicsList : 'Нету комиксов об этом персонаже'\r\n\r\n    \r\n    return (\r\n        <> \r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle} />\r\n                <div>\r\n\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {renderedComics}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default CharInfo;\r\n\r\n\r\n","import { Component } from \"react\";\r\nimport Error from \"../error/Error\";\r\nclass ErrorBoundary extends Component {\r\n    state ={ \r\n        error : false \r\n    }\r\n\r\n    componentDidCatch(error , errorInfo) {\r\n        console.log(error , errorInfo)\r\n        this.setState({\r\n            error : true \r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n            \r\n            return <Error/>\r\n            \r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport { Component } from \"react\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\nclass App extends Component {\r\n\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <main>\r\n                \r\n                    <ErrorBoundary>\r\n                        <RandomChar />\r\n                    </ErrorBoundary>\r\n\r\n                    <div className=\"char__content\">\r\n\r\n                        <ErrorBoundary>\r\n                            <CharList onCharSelected={this.onCharSelected} />\r\n                        </ErrorBoundary>\r\n\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar} />\r\n                        </ErrorBoundary>\r\n\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n                   \r\n                </main>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\n\r\nimport './style/style.scss';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}